
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can manage their own profile. Admins can read all.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null; // For user registration
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Admins can list users
    }

    // Notifications: Users manage their own.
    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null; // System or other users can create notifications for a user
    }

    // Bookings:
    // - Customers can create for any salon.
    // - Customers can read/update/delete their own bookings.
    // - Salon owners can read/update bookings for their salon.
    // - Admins can read/update/delete any booking.
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null &&
                            (request.auth.uid == resource.data.userId ||
                             (resource.data.salonOwnerId != null && request.auth.uid == resource.data.salonOwnerId) ||
                             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if request.auth != null &&
                            (request.auth.uid == resource.data.userId || 
                             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Reviews:
    // - Authenticated users can create reviews.
    // - Users can read/update/delete their own reviews.
    // - Public can read all reviews.
    // - Salon owners can reply (update a 'reply' field if implemented).
    // - Admins can manage all reviews.
    match /reviews/{reviewId} {
      allow create: if request.auth != null;
      allow read: if true; 
      allow update: if request.auth != null &&
                       (request.auth.uid == resource.data.userId || 
                        (resource.data.salonId != null && request.auth.uid == get(/databases/$(database)/documents/salons/$(resource.data.salonId)).data.ownerId) || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if request.auth != null &&
                       (request.auth.uid == resource.data.userId || 
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Salons: Public read. Owners can write to their own. Admins can write to any.
    match /salons/{salonId} {
      allow read: if true;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'business';
      allow update, delete: if request.auth != null &&
                               (request.auth.uid == resource.data.ownerId ||
                                get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Newsletter Subscribers: Anyone can create (subscribe). Admins can read/list/delete.
    match /newsletterSubscribers/{subscriberId} {
      allow create: if true;
      allow read, list, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Promotion Payments: Only authenticated users can create. Admins can read/list/manage.
    match /promotionsPayments/{paymentId} {
      allow create: if request.auth != null; 
      allow read, list, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Contact Messages: Anyone can create. Admins can manage.
    match /contacts/{contactId} {
      allow create: if true;
      allow read, list, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Counters: Authenticated users can read/write. (Use with caution for writes).
    match /counters/{counterName} {
      allow read: if request.auth != null; 
      allow write: if request.auth != null; // Consider restricting writes more specifically if needed.
    }

    // Settings: Public read for website settings. Admins can write.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}

    
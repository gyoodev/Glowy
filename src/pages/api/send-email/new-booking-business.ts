
import type { NextApiRequest, NextApiResponse } from 'next';
import { sendEmail } from '@/lib/email-service';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method Not Allowed' });
  }

  const {
    ownerEmail,
    salonName,
    serviceName,
    bookingDate,
    bookingTime,
    clientName,
    clientPhoneNumber,
  } = req.body;

  if (!ownerEmail || !salonName || !serviceName || !bookingDate || !bookingTime || !clientName) {
    return res.status(400).json({ message: 'Missing required fields for new booking notification.' });
  }

  const subject = `üéâ –ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –≤ ${salonName}!`;
  const html = `
      <div style="font-family: Arial, sans-serif; line-height: 1.6;">
        <h2>–ò–º–∞—Ç–µ –Ω–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –∑–∞ –í–∞—à–∏—è —Å–∞–ª–æ–Ω, ${salonName}!</h2>
        <p>–ü–æ-–¥–æ–ª—É —Å–∞ –¥–µ—Ç–∞–π–ª–∏—Ç–µ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞:</p>
        <ul>
          <li><strong>–ö–ª–∏–µ–Ω—Ç:</strong> ${clientName}</li>
          <li><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${clientPhoneNumber || '–ù—è–º–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–µ–Ω'}</li>
          <li><strong>–£—Å–ª—É–≥–∞:</strong> ${serviceName}</li>
          <li><strong>–î–∞—Ç–∞:</strong> ${bookingDate}</li>
          <li><strong>–ß–∞—Å:</strong> ${bookingTime}</li>
        </ul>
        <p>–ú–æ–ª—è, –ø—Ä–µ–≥–ª–µ–¥–∞–π—Ç–µ –∏ –ø–æ—Ç–≤—ä—Ä–¥–µ—Ç–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –æ—Ç –í–∞—à–∏—è –±–∏–∑–Ω–µ—Å –ø–∞–Ω–µ–ª –≤ Glaura.</p>
        <p>–ü–æ–∑–¥—Ä–∞–≤–∏,<br>–ï–∫–∏–ø—ä—Ç –Ω–∞ Glaura</p>
      </div>
    `;

  const result = await sendEmail({ to: ownerEmail, subject, html });

  if (result.success) {
    res.status(200).json({ message: 'Business notification email sent successfully' });
  } else {
    res.status(500).json({ message: result.message });
  }
}


'use client';

import { Sparkles, Send } from 'lucide-react';
import Link from 'next/link';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { useForm, type SubmitHandler } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { useToast } from '@/hooks/use-toast';
import { subscribeToNewsletter } from '@/lib/firebase';
import { useState } from 'react';
import { IconBrandFacebook, IconBrandInstagram, IconBrandTiktok } from '@tabler/icons-react';

const newsletterFormSchema = z.object({
  email: z.string().email({ message: "–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª –∞–¥—Ä–µ—Å." }),
});

type NewsletterFormValues = z.infer<typeof newsletterFormSchema>;

const socialLinks = [
  { 
    name: 'Facebook', 
    href: 'https://www.facebook.com/Glaura-100000000000000',
    icon: <IconBrandFacebook className="w-6 h-6" />
  },
  { 
    name: 'Instagram', 
    href: 'https://www.instagram.com/glaura.official/',
    icon: <IconBrandInstagram className="w-6 h-6" />
  },
  {
    name: 'TikTok',
    href: 'https://www.tiktok.com/@glaura.official',
    icon: <IconBrandTiktok className="w-6 h-6" />
  },
];

export function Footer() {
  const { toast } = useToast();
  const [isSubscribing, setIsSubscribing] = useState(false);

  const form = useForm<NewsletterFormValues>({
    resolver: zodResolver(newsletterFormSchema),
    defaultValues: {
      email: '',
    },
  });

  const onNewsletterSubmit: SubmitHandler<NewsletterFormValues> = async (data) => {
    setIsSubscribing(true);
    const result = await subscribeToNewsletter(data.email);
    if (result.success) {
      toast({
        title: '–ê–±–æ–Ω–∞–º–µ–Ω—Ç—ä—Ç –µ —É—Å–ø–µ—à–µ–Ω!',
        description: result.message,
      });
      form.reset();
    } else {
      toast({
        title: '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∞–±–æ–Ω–∏—Ä–∞–Ω–µ',
        description: result.message,
        variant: result.message.includes("–≤–µ—á–µ –µ –∞–±–æ–Ω–∏—Ä–∞–Ω") ? "default" : "destructive",
      });
    }
    setIsSubscribing(false);
  };

  return (
    <footer className="border-t bg-muted/40">
      <div className="container py-12 px-6">
        <div className="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-8 mb-8">
          <div className="md:col-span-1 lg:col-span-1">
            <h3 className="text-lg font-semibold text-foreground mb-3">–ó–∞ Glaura</h3>
            <p className="text-sm text-muted-foreground leading-relaxed">
              Glaura –µ –í–∞—à–∞—Ç–∞ –¥–µ—Å—Ç–∏–Ω–∞—Ü–∏—è –∑–∞ –æ—Ç–∫—Ä–∏–≤–∞–Ω–µ –Ω–∞ –Ω–∞–π-–¥–æ–±—Ä–∏—Ç–µ —Å–∞–ª–æ–Ω–∏ –∑–∞ –∫—Ä–∞—Å–æ—Ç–∞ –∏ —É–µ–ª–Ω–µ—Å —É—Å–ª—É–≥–∏. –ù–∏–µ –í–∏ –ø–æ–º–∞–≥–∞–º–µ –ª–µ—Å–Ω–æ –¥–∞ –Ω–∞–º–µ—Ä–∏—Ç–µ –∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–∞—Ç–µ –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–æ—Ç–æ –∏–∑–∂–∏–≤—è–≤–∞–Ω–µ.
            </p>
          </div>

          <div>
            <h3 className="text-lg font-semibold text-foreground mb-3">–í–∞–∂–Ω–∏ –í—Ä—ä–∑–∫–∏</h3>
            <ul className="space-y-2 text-sm">
              <li><Link href="/about-glowy" className="text-muted-foreground hover:text-primary transition-colors">–ó–∞ Glaura</Link></li>
              <li><Link href="/terms" className="text-muted-foreground hover:text-primary transition-colors">–£—Å–ª–æ–≤–∏—è –∑–∞ –ü–æ–ª–∑–≤–∞–Ω–µ</Link></li>
              <li><Link href="/privacy" className="text-muted-foreground hover:text-primary transition-colors">–ü–æ–ª–∏—Ç–∏–∫–∞ –∑–∞ –ø–æ–≤–µ—Ä–∏—Ç–µ–ª–Ω–æ—Å—Ç</Link></li>
              <li><Link href="/contact" className="text-muted-foreground hover:text-primary transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç–∏</Link></li>
              <li><Link href="/faq" className="text-muted-foreground hover:text-primary transition-colors">–ß–µ—Å—Ç–æ –∑–∞–¥–∞–≤–∞–Ω–∏ –≤—ä–ø—Ä–æ—Å–∏</Link></li>
            </ul>
          </div>

          <div className="md:col-span-2 lg:col-span-2">
            <h3 className="text-lg font-semibold text-foreground mb-3">–ê–±–æ–Ω–∏—Ä–∞–π—Ç–µ —Å–µ –∑–∞ –Ω–∞—à–∏—è –±—é–ª–µ—Ç–∏–Ω</h3>
            <p className="text-sm text-muted-foreground mb-4">
              –ü–æ–ª—É—á–∞–≤–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ –Ω–æ–≤–∏–Ω–∏, –æ—Ñ–µ—Ä—Ç–∏ –∏ —Å—ä–≤–µ—Ç–∏ –∑–∞ –∫—Ä–∞—Å–æ—Ç–∞ –¥–∏—Ä–µ–∫—Ç–Ω–æ –≤—ä–≤ –í–∞—à–∞—Ç–∞ –ø–æ—â–∞.
            </p>
            <form onSubmit={form.handleSubmit(onNewsletterSubmit)} className="flex flex-col sm:flex-row gap-2">
              <Input
                type="email"
                placeholder="–í–∞—à–∏—è—Ç –∏–º–µ–π–ª –∞–¥—Ä–µ—Å"
                className="flex-grow"
                aria-label="–ò–º–µ–π–ª –∑–∞ –±—é–ª–µ—Ç–∏–Ω"
                {...form.register("email")}
                disabled={isSubscribing}
              />
              <Button type="submit" variant="default" disabled={isSubscribing}>
                <Send className="mr-2 h-4 w-4" />
                {isSubscribing ? '–ê–±–æ–Ω–∏—Ä–∞–Ω–µ...' : '–ê–±–æ–Ω–∏—Ä–∞–π —Å–µ'}
              </Button>
            </form>
            {form.formState.errors.email && (
              <p className="text-sm text-destructive mt-1">{form.formState.errors.email.message}</p>
            )}
          </div>
        </div>

        <div className="border-t pt-8">
          <div className="flex flex-col items-center justify-between gap-4 md:flex-row">
            <div className="flex flex-col items-center gap-4 md:flex-row md:gap-2">
              <Sparkles className="h-6 w-6 text-primary" />
              <p className="text-center text-sm leading-loose text-muted-foreground md:text-left">
                –°—ä–∑–¥–∞–¥–µ–Ω–æ –æ—Ç <a href="https://gkdev.org" target="_blank" rel="noopener noreferrer" className="font-medium text-primary hover:underline">GKDEV</a> —Å üíú &copy; {new Date().getFullYear()} –í—Å–∏—á–∫–∏ –ø—Ä–∞–≤–∞ –∑–∞–ø–∞–∑–µ–Ω–∏.
              </p>
            </div>
            <div className="flex items-center space-x-4">
              {socialLinks.map((link) => (
                <a key={link.name} href={link.href} target="_blank" rel="noopener noreferrer" className="text-muted-foreground hover:text-primary transition-colors">
                  <span className="sr-only">{link.name}</span>
                  {link.icon}
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
}
